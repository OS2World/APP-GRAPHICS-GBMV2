#
# Generalised Bitmap Module C++ adapter for GBM plugins,
#
# Copyright (C) 2006-2010 Heiko Nitzsche
#
#   This software is provided 'as-is', without any express or implied
#   warranty.  In no event will the author be held liable for any damages
#   arising from the use of this software.
#
#   Permission is granted to anyone to use this software for any purpose,
#   including commercial applications, and to alter it and redistribute it
#   freely, subject to the following restrictions:
#
#   1. The origin of this software must not be misrepresented; you must not
#      claim that you wrote the original software. If you use this software
#      in a product, an acknowledgment in the product documentation would be
#      appreciated but is not required.
#   2. Altered source versions must be plainly marked as such, and must not be
#      misrepresented as being the original software.
#   3. This notice may not be removed or altered from any source distribution.
#
# This makefile is for MS Visual C++ on Windows 32/64bit.
#

# Builds the adapter library to GBM.DLL.

# As GBM.DLL is built multithreaded, all users should also be multithreaded.

# Location of gbm libs and public header files
GBM     = ..\..\gbm

# ------------------
# Configure compiler
# ------------------

#
# Using Open Watcom C++:
#

# Builds gbm objects which are compiled multithreaded
# Therefore all users should also be multithreaded
CWARNS         = /W3 /WX /wd4290
CFLAGS         = /c $(CWARNS) /I. /I$(GBM) /O2 /nologo /MT /EHsc /D_CRT_SECURE_NO_DEPRECATE /DNDEBUG /DWIN32
CFLAGS_DBG     = /c $(CWARNS) /I. /I$(GBM) /Od /nologo /EHsc /Zi /GS /RTC1 /MTd /D_CRT_SECURE_NO_DEPRECATE /DDEBUG /DWIN32
LIBFLAGS       = /NOLOGO

# Minimum Windows version is Windows 2000 and higher
WIN_VERSION = /D_WIN32_WINNT=0x0500 /DWINVER=0x0500

# For debugging call nmake or wmake with debug=on
!ifdef debug
CFLAGS = $(CFLAGS_DBG)
!endif

#

.SUFFIXES: .cpp .obj

.cpp.obj:
               cl $(CFLAGS) $(WIN_VERSION) $*.cpp

#

all:           common.lib

#

common.lib:    ConfigHandler.obj Semaphore.obj Thread.obj \
               GbmAccessor.obj GbmException.obj \
               GbmDocument.obj GbmDocumentPage.obj GbmRenderer.obj
               -del /F /Q $@ 2> nul
               lib $(LIBFLAGS) /OUT:$@ $**

ConfigHandler.obj: ConfigHandler.cpp ConfigHandler.hpp windefs.h

Semaphore.obj:     Semaphore.cpp Semaphore.hpp windefs.h

Thread.obj:        Thread.cpp Thread.hpp windefs.h

# GBM files
GbmAccessor.obj:        GbmAccessor.cpp GbmAccessor.hpp windefs.h $(GBM)\gbm.h

GbmException.obj:       GbmException.cpp GbmException.hpp windefs.h $(GBM)\gbm.h

GbmDocument.obj:        GbmDocument.cpp GbmDocument.hpp windefs.h $(GBM)\gbm.h

GbmDocumentPage.obj:    GbmDocumentPage.cpp GbmDocumentPage.hpp windefs.h $(GBM)\gbm.h $(GBM)\gbmmem.h

GbmRenderer.obj:        GbmRenderer.cpp GbmRenderer.hpp windefs.h \
                          $(GBM)\gbm.h $(GBM)\gbmmem.h $(GBM)\gbmscale.h $(GBM)\gbmmir.h $(GBM)\gbmrect.h


# ------------------------
# Build management targets
# ------------------------

clean:
    -del /F /Q *.obj *.err *.pdb 2>nul

clobber:
    -del /F /Q *.obj *.lib *.err *.pdb 2>nul

#

install:

#

exepack:
    @echo "Packing of executables is not supported"
#

package:


