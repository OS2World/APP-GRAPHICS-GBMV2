<HTML><HEAD>
<TITLE>OS/2 Differences, Steps, Files</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#0000FF" VLINK="#FF0000" ALINK="#FF0000">
<H1>OS/2 Differences, Steps, Files</H1>

<UL>
<LI><a href="#C0">Differences in a OS/2 Plug-In</a>
<LI><a href="#C1">Creating a OS/2 Plug-In</a>
<LI><a href="#C2">OS/2 Files</a>
</UL>

<a name="C0"><h2>Differences in a OS/2 Plug-In</h2></a>
<P>The OS/2 interface to plug-ins differs from the Windows documentation in
the following ways:
<UL>
<LI>Coordinates passed in
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi2.htm#nppsetwindow">NPP_SetWindow</A>
and
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi2.htm#nppprint">NPP_Print</A>
are based on origin
being bottom-left with height extending upwards and width extending to the right.
<LI>The window passed by
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi2.htm#nppsetwindow">NPP_SetWindow</A>
is of class "Netscape Plugin Window" and has
a class style of CS_MOVENOTIFY.
<LI>The platformPrint field in the
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi4.htm#npfullprint">NPFullPrint</A>
and
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi4.htm#npembedprint">NPEmbedPrint</A>
data structures passed by
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi2.htm#nppprint">NPP_Print</A>
is an HPS.
<LI>
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi3.htm">Netscape methods</A>
(NPN_*) must only be made from thread 1.
<LI>Returning FALSE from
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pi2.htm#nppprint">NPP_Print</A>
with a full-page embed will allow Navigator to print the plug-in on your behalf.
The plug-in data is reloaded for the display window as a result of this.
<LI>There is no support for the Java interface (JRI) interface to plug-ins.
<LI>To get keystrokes that the Navigator uses for accelerator keys like
CTRL, SHIFT, and ESC, in your subclass window procedure, respond FALSE to WM_TRANSLATEACCEL
messages. This will prevent any translation of WM_CHAR messages by Navigator's
accelerator table while the "Netscape Plugin Window" has the focus.
The plug-in might also inspect the parameters for each WM_TRANSLATEACCL message
and pass some messages on to Navigator.  Things like F5 (reload page), TAB,
ALT-F4, etc. should behave as the user expects.  This can be done by calling
the original window procedure for the "Netscape Plugin Window" with the WM_TRANSLATEACCL message.
<LI>Plug-ins should always pass system control keys, like ALT-F4, on to Navigator.
Never close the "Netscape Plugin Window" in response to a user keystroke.
Navigator manages the plug-in window construction and destruction.
<LI>Setting the height and width of a plug-in to 1x1 is not supported and will cause
errors in page handling.  Use HIDDEN=TRUE on the
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pr2.htm">
EMBED</A> tag if you want to hide a plug-in.
<LI>DDE between plug-ins and Navigator will work on OS/2.  This is currently not
supported on other platforms.
</UL>
<a name="C1"><h2>Creating a OS/2 Plug-In</h2></a>
<P>
In order to create a OS/2 plug-in you need a C++ complier, such as
IBM's Visual Age C++ version 3.0 compiler.
<P>
<OL>
<LI>Create a directory on your hard drive for the plug-in project. For
example, you might call this directory OS2PLUG.
<LI>Download the OS/2 Sample Source Code. Note that the file is
compressed.
<LI>Use the resulting dialog boxes to save the file in the directory
you created for the plug-in project (for example, in C:\OS2PLUG). The
compressed file is saved in the directory you specified.
<LI>Decompress the file. If you are using pkunzip to decompress the
file, use the -d flag to maintain the directory structure stored in
the zip file. A readme file is placed in the directory. The following
directory structure is created:
<UL>
<LI>
<B>\common</B>
contains common build files NPOS2.CPP
<LI>
<B>\doc</B>
contains this documentation
<LI>
<B>\include</B>
contains header files NPAPI.H and NPUPP.H
<LI>
<B>\sample\npclock</B>
directory contains a plug-in that displays a clock. The clock plug-in responds
to an additional attributes in the
<A HREF="http://home.netscape.com/eng/mozilla/3.0/handbook/plugins/pr2.htm">EMBED</A>
tag named TRANSPARENCY. The two valid values are ON and OFF.
<LI>
<B>\sample\npdraw</B>
directory contains a plug-in that streams a drawing. A random draw data file
can be generated by building and running the GENDATA.EXE program.
<LI>
<B>\sample\npshell</B>
directory contains a template of the files you use to create a new plug-in
<LI>
<B>\test</B>
contains test HTML files for the plug-in samples
</UL>
<LI>Create a new subdirectory to work in. For example,
C:\OS2PLUG\SAMPLES\MYPLUG.
<LI>Copy all the directories and files in the \sample\npshell directory into
your new working directory. In addition, copy into this directory any
auxiliary plug-in specific files you have created. For example, you
may have written code to implement window handling functionality.
<LI>Using your compiler, open the existing makefile in your working
directory.
<LI>Edit the resource file NPSHELL.RC
to include the correct information. You must change the MIME type and
the file extension values. For example, if you were creating an AVI
plug-in, your resource file would look like this:
<PRE>
#include "npapi.h"
RCDATA NP_INFO_ProductVersion { 1,0,0,1, }
RCDATA NP_INFO_MIMEType       {"Sample/Draw"}
RCDATA NP_INFO_FileExtents    {"drw"}
RCDATA NP_INFO_FileOpenName   {"OS/2 Streaming Draw Plugin"}
</PRE>
<B>NOTE</B>: There is a problem in the OS/2 resource compiler that causes an error if the '}'
is appended to the first RCDATA type (NP_INFO_ProductVersion in the above example) without
the extra comma.  You can also move the last brace to the next line to avoid the compile error.
<LI>To include multiple MIME types in the plug-in, use a vertical bar to
delimit each value in the MIME type. For example, VALUE "MIMEType",
"sample/bmp|sample/gif".  MIME types must be paired with file extensions and descriptions.
For the previous example, the extensions should be "bmp|gif" and the file descriptions would be
"bitmap files|gif files".
<LI>Save the resource file. The resource file allows Netscape to query
the plug-in without having to load it in memory.
<LI>Open the file npshell.cpp. This is a compilable shell file that
provides the framework for creating a plug-in. By working in
npshell.cpp, you simply fill in the necessary code for basic plug-in
functionality.
<LI>In npshell.cpp, write the code for the functions needed for your
plug-in. The Plug-In Application Programming Interface provides a
detailed description of each function. You may want to take a look at
the other samples.
<LI>Save the npshell.cpp file.
<LI>Using your compiler, build the project. The file npshell.dll is created.
In the samples, you can get a debug version by specifying
<B>OPT=DEBUG</B>
on the command line and a dynamically-linked DLL by specifying
<B>CRT=DYNAMIC</B>.
<LI>Copy the dll file (npshell.dll) into the PLUGINS
subdirectory of Navigator. If this directory doesn't exist, create it
in the same location as netscape.exe. If the plug-in has associated
files, create a separate subdirectory and places the files there.
<LI>Restart Navigator. When Netscape Navigator starts up, it locates the path to the
NETSCAPE.EXE and looks for a PLUGINS subdirectory there (not necessarily the current directory)
Navigator then looks for plug-in modules in that directory and any subdirectories.
<LI>From the Help menu of Navigator, choose About Plug-ins. A list of
all plug-ins in the directory is displayed. You should see your Mime
type listed.
<LI>Test your plug-in by creating an HTML document.
<LI><B>Navigator will only accept plug-in dlls with file names begining with 'np'.</B>
</OL>
<HR>
<a name="C2"><h2>OS/2 Files</h2></a>
<P>
When you unzip the OS/2 sample source code, several subdirectories
are automatically created in your working directory.
<P>
The contents of each directory include:
<H4>\common Directory</H4>
<UL>
<LI>npos2.cpp - Passes plug-in function pointers to Netscape for
communication and contains shell functions for Navigator entry
points. This file also implements version checking. You should not
need to change this file.
</UL>
<H4>\include Directory</H4>
<UL>
<LI>npapi.h - Plug-in header file for plug-in entry points and callback to
Netscape.
<LI>npupp.h - Function pointer tables and DLL entry point definitions.
</UL>
<H4>\sample\npclock Directory</H4>
<UL>
<LI>npclock.cpp - main line for plug-in
<LI>clock.h - constants for resource
<LI>clock.hpp - class header for Clock class
<LI>clock.cpp - class implementation for Clock class
<LI>npclock.rc - resources
<LI>npclock.def - def file
<LI>makefile - A IBM VisualAge C++ 3.0 make file for plug-ins.
</UL>
<H4>\sample\npdraw Directory</H4>
<UL>
<LI>npdraw.cpp - main line for plug-in
<LI>draw.h - constants
<LI>npdraw.rc - resources
<LI>npdraw.def - def file
<LI>makefile - A IBM VisualAge C++ 3.0 make file for plug-ins.
<LI>gendata.cpp - source to generate random data
<LI>gendata.def - def file for GENDATA.EXE
<LI>gendata.mak - Makefile for GENDATA.EXE
</UL>
<H4>\samples\npshell Directory</H4>
<UL>
<LI>npshell.cpp - Shell implementation of all plug-in methods. This
file also includes suggestions (as comments) on plug-in development
as applicable to a specific method. You use this file to create your
own plug-in.
<LI>npshell.def - Used by the linker to resolve export symbols for
plug-in entry points. You should not need to change this file.
<LI>npshell.rc - Contains boiler-plate symbols for plug-ins.
<LI>makefile - A IBM VisualAge C++ 3.0 make file for plug-ins.
</UL>
<H4>\test Directory</H4>
<UL>
<LI>clock.clk - data file for clock plug-in
<LI>clock.htm - HTML to display clock plug-in
<LI>draw.lst - data file for draw plug-in
<LI>draw.htm - HTML to display draw plug-in
<LI>npshell.htm - HTML for shell plug-in
<LI>npshell.smp - data file for shell plug-in
</UL>
</BODY>
</HTML>
 
 
 
