#
# Generalised Bitmap Module Mozilla/Firefox/SeaMonkey adapter
#
# Copyright (C) 2006-2012 Heiko Nitzsche
#
#   This software is provided 'as-is', without any express or implied
#   warranty.  In no event will the author be held liable for any damages
#   arising from the use of this software.
#
#   Permission is granted to anyone to use this software for any purpose,
#   including commercial applications, and to alter it and redistribute it
#   freely, subject to the following restrictions:
#
#   1. The origin of this software must not be misrepresented; you must not
#      claim that you wrote the original software. If you use this software
#      in a product, an acknowledgment in the product documentation would be
#      appreciated but is not required.
#   2. Altered source versions must be plainly marked as such, and must not be
#      misrepresented as being the original software.
#   3. This notice may not be removed or altered from any source distribution.
#
# This makefile is for GCC 3.x on OS/2 32bit.
#
#
# Builds the library NPGBM.DLL.
#

# include configuration setting for nmake (except compiler options)
!INCLUDE ..\..\..\make.opt

# Location of gbm libs and public header files
COMMON = ..\..\common
GBM    = ..\..\..\gbm
GBMDLG = ..\..\..\gbmv_pm\gbmdlg
NP_SDK = ..\sdk\os2

# Directory where npgbm.dll will be placed
DLL_OUT = ..

# ------------------
# Configure compiler
# ------------------

CWARNS         = -Wall -Werror
CFLAGS_DLL     = -c $(CWARNS) -I. -I$(GBM) -I$(GBMDLG) -I$(COMMON) -I$(NP_SDK) -mcpu=i686 -m32 -O3 -Zomf -D_USRDLL -D_MBCS -DNDEBUG
CFLAGS_DLL_DBG = -c $(CWARNS) -I. -I$(GBM) -I$(GBMDLG) -I$(COMMON) -I$(NP_SDK) -mcpu=i686 -m32 -Zomf -g  -D_USRDLL -D_MBCS -DDEBUG

LFLAGS         = -Zmt -Zomf -Zlinker /NOE -Zlinker /NOI -Zlinker /ALIGN:4 -Zlinker /EXEPACK:2 -Zlinker /OPTFUNC -Zlinker /PACKCODE -Zlinker /PACKDATA
LFLAGS_DBG     = -Zmt -Zomf -Zlinker /NOE -Zlinker /NOI -Zlinker /ALIGN:4 -Zlinker /DEBUG -Zlinker /DBGPACK
LFLAGS_DLL     = $(LFLAGS) -Zdll
LFLAGS_DLL_DBG = $(LFLAGS_DBG) -Zdll

# For debugging call nmake or wmake with debug=on
!ifdef debug
CFLAGS_DLL = $(CFLAGS_DLL_DBG)
LFLAGS_DLL = $(LFLAGS_DLL_DBG)
!endif

#

.SUFFIXES: .cpp .o .rc .res

.cpp.o:
           gcc $(CFLAGS_DLL) $*.cpp

.rc.res:
           rc -i $(NP_SDK) -i $(GBMDLG) -n -r -x2 $*.rc

#

all:   common.lib $(DLL_OUT)\npgbm.dll

#

$(DLL_OUT)\npgbm.dll:  $(NP_SDK)\npos2.o npgbm.o GbmBitmapViewer.o GbmSaveFileDialog.o npgbm_gcc.def npgbm.res
                       gcc $(LFLAGS_DLL) -o $@ $(NP_SDK)\npos2.o npgbm.o GbmBitmapViewer.o GbmSaveFileDialog.o -l$(COMMON)\common.lib \
                           -L$(GBM) -lgbmmem.lib -lgbmmthrd.lib -lgbmscale.lib -lgbmmir.lib -lgbmrect.lib npgbm_gcc.def
                       rc -n -x2 npgbm.res $@

$(NP_SDK)\npos2.o:  $(NP_SDK)\npos2.cpp $(NP_SDK)\npapi.h $(NP_SDK)\npupp.h
                      gcc $(CFLAGS_DLL) -o $(NP_SDK)\npos2.o $(NP_SDK)\npos2.cpp

npgbm.o:     npgbm.cpp $(NP_SDK)\npapi.h $(COMMON)\os2defs.h \
                 $(COMMON)\GbmException.hpp $(COMMON)\GbmAccessor.hpp $(COMMON)\GbmDocument.hpp $(COMMON)\GbmDocumentPage.hpp $(COMMON)\GbmRenderer.hpp \
                 $(COMMON)\ConfigHandler.hpp $(GBM)\gbm.h $(GBM)\gbmmem.h $(GBM)\gbmscale.h $(GBM)\gbmmir.h $(GBM)\gbmrect.h

GbmBitmapViewer.o:  GbmBitmapViewer.cpp GbmBitmapViewer.hpp GbmBitmapViewer_rc.h $(COMMON)\os2defs.h \
                 $(COMMON)\GbmException.hpp $(COMMON)\GbmAccessor.hpp $(COMMON)\GbmDialogAccessor.hpp $(COMMON)\GbmDocument.hpp $(COMMON)\GbmDocumentPage.hpp $(COMMON)\GbmRenderer.hpp \
                 $(COMMON)\Semaphore.hpp $(COMMON)\ConfigHandler.hpp $(GBM)\gbm.h $(GBM)\gbmmem.h $(GBM)\gbmscale.h $(GBM)\gbmmir.h $(GBM)\gbmrect.h \
                 $(GBMDLG)\gbmdlg.h

GbmSaveFileDialog.o:  GbmSaveFileDialog.cpp GbmSaveFileDialog.hpp GbmSaveFileDialog_rc.h $(COMMON)\os2defs.h $(COMMON)\GbmAccessor.hpp $(COMMON)\GbmDialogAccessor.hpp $(GBM)\gbmmem.h $(GBM)\gbmscale.h

npgbm.res:     npgbm.rc GbmBitmapViewer.rc GbmSaveFileDialog.rc GbmBitmapViewer_rc.h GbmSaveFileDialog_rc.h $(NP_SDK)\npapi.h

common.lib:
!ifdef debug
               (cd $(COMMON) && nmake -c -f makefile.gcc_os2 debug=yes)
!else
               (cd $(COMMON) && nmake -c -f makefile.gcc_os2)
!endif

# ------------------------
# Build management targets
# ------------------------

clean:
    (cd $(COMMON) && nmake -c -f makefile.vac_os2 clean)
    -del /F /N *.o $(NP_SDK)\*.o *.res 2>nul

clobber:
    (cd $(COMMON) && nmake -c -f makefile.vac_os2 clobber)
    -del /F /N *.o $(NP_SDK)\*.o *.res $(DLL_OUT)\npgbm.dll 2>nul

#

install:

#

exepack:
         $(DLL_PACKER) $(DLL_OUT)\*.dll

#

package:


